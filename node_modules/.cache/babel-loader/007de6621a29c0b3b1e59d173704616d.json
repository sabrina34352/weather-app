{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/components/ForecastGraph.js\";\nimport React from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst x1 = [\"10\", \"70\"];\nconst y1 = [\"10\", \"70\"];\nconst x2 = [\"70\", \"200\"];\nconst y2 = [\"70\", \"15\"];\nconst temperatureData = [{\n  x: \"10\",\n  y: \"70\"\n}, {\n  x: \"70\",\n  y: \"70\"\n}, {\n  x: 2,\n  y: 2\n}];\n\nfunction ForecastGraph() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: forecastCSS.graph,\n      children: x1.map((each, key) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: each,\n        y1: y1[key],\n        x2: x2[key],\n        y2: y2[key],\n        stroke: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ForecastGraph;\nexport default ForecastGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastGraph\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/ForecastGraph.js"],"names":["React","forecastCSS","x1","y1","x2","y2","temperatureData","x","y","ForecastGraph","graph","map","each","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,KAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AAEA,MAAMC,eAAe,GAAG,CACtB;AAAEC,EAAAA,CAAC,EAAE,IAAL;AACCC,EAAAA,CAAC,EAAE;AADJ,CADsB,EAGtB;AAAED,EAAAA,CAAC,EAAE,IAAL;AAAWC,EAAAA,CAAC,EAAE;AAAd,CAHsB,EAItB;AAAED,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAJsB,CAAxB;;AAMA,SAASC,aAAT,GAAyB;AACvB,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAER,WAAW,CAACS,KAA5B;AAAA,gBACGR,EAAE,CAACS,GAAH,CAAO,CAACC,IAAD,EAAOC,GAAP,kBACN;AACE,QAAA,EAAE,EAAED,IADN;AAEE,QAAA,EAAE,EAAET,EAAE,CAACU,GAAD,CAFR;AAGE,QAAA,EAAE,EAAET,EAAE,CAACS,GAAD,CAHR;AAIE,QAAA,EAAE,EAAER,EAAE,CAACQ,GAAD,CAJR;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;KAhBQJ,a;AAkBT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nconst x1 = [\"10\", \"70\"];\nconst y1 = [\"10\", \"70\"];\nconst x2 = [\"70\", \"200\"];\nconst y2 = [\"70\", \"15\"];\n\nconst temperatureData = [\n  { x: \"10\",\n   y: \"70\", },\n  { x: \"70\", y: \"70\" },\n  { x: 2, y: 2 },\n];\nfunction ForecastGraph() {\n  return (\n    <>\n      <svg className={forecastCSS.graph}>\n        {x1.map((each, key) => (\n          <line\n            x1={each}\n            y1={y1[key]}\n            x2={x2[key]}\n            y2={y2[key]}\n            stroke=\"white\"\n          />\n        ))}\n      </svg>\n    </>\n  );\n}\n\nexport default ForecastGraph;\n"]},"metadata":{},"sourceType":"module"}