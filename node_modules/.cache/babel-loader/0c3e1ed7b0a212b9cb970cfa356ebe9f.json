{"ast":null,"code":"import _slicedToArray from\"/home/sabrina/codes/weather-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import forecastCSS from\"./forecast.module.css\";import forecastGraphCSS from\"../Graph/forecastGraph.module.css\";import ForecastGraph from\"../Graph/ForecastGraph\";import React,{useRef,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Forecast(_ref){var data=_ref.data,temperatureDay=_ref.temperatureDay,temperatureNight=_ref.temperatureNight;var divRef=useRef(null);var childRef=useRef(null);var _useState=useState({}),_useState2=_slicedToArray(_useState,2),containerData=_useState2[0],setcontainerData=_useState2[1];useEffect(function(){var widthMiddle=divRef.current.offsetWidth;var WidthOfChild=childRef.current.offsetWidth;var heightOfChild=childRef.current.offsetHeight;//width of the parent container divided by the number of elements and divided by 2 to find the middle\n// width of child container to be able to draw a line to  exact pixels\nsetcontainerData({startingPoint:widthMiddle/(data.length*2),widthOfContainers:WidthOfChild,heightOfContainers:heightOfChild});},[containerData]);return/*#__PURE__*/_jsxs(\"div\",{className:forecastCSS.mainContainer,ref:divRef,children:[Object.keys(containerData).length!==0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ForecastGraph,{data:containerData,temperature:temperatureDay,style:forecastGraphCSS.dayTime}),/*#__PURE__*/_jsx(ForecastGraph,{data:containerData,temperature:temperatureNight,style:forecastGraphCSS.nightTime})]}),data.map(function(bud){return/*#__PURE__*/_jsxs(\"div\",{className:forecastCSS.eachDay,children:[/*#__PURE__*/_jsx(\"p\",{className:forecastCSS.bigFont,children:bud.day}),/*#__PURE__*/_jsx(\"p\",{className:forecastCSS.smallFont,children:bud.date}),/*#__PURE__*/_jsx(\"img\",{src:bud.weather,className:forecastCSS.images,alt:\"weather\"}),/*#__PURE__*/_jsx(\"div\",{className:forecastCSS.graphSpace,ref:childRef}),/*#__PURE__*/_jsx(\"div\",{className:forecastCSS.graphSpace}),/*#__PURE__*/_jsx(\"img\",{src:bud.weatherNight,className:forecastCSS.images,alt:\"weatherNight\"}),/*#__PURE__*/_jsx(\"p\",{className:forecastCSS.bigFont,children:bud.wind})]},bud.day);})]});}export default Forecast;","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/Forecast/index.jsx"],"names":["forecastCSS","forecastGraphCSS","ForecastGraph","React","useRef","useEffect","useState","Forecast","data","temperatureDay","temperatureNight","divRef","childRef","containerData","setcontainerData","widthMiddle","current","offsetWidth","WidthOfChild","heightOfChild","offsetHeight","startingPoint","length","widthOfContainers","heightOfContainers","mainContainer","Object","keys","dayTime","nightTime","map","bud","eachDay","bigFont","day","smallFont","date","weather","images","graphSpace","weatherNight","wind"],"mappings":"qHAAA,MAAOA,CAAAA,WAAP,KAAwB,uBAAxB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,mCAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,wBAA1B,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,C,6IAEA,QAASC,CAAAA,QAAT,MAA8D,IAA1CC,CAAAA,IAA0C,MAA1CA,IAA0C,CAApCC,cAAoC,MAApCA,cAAoC,CAApBC,gBAAoB,MAApBA,gBAAoB,CAC5D,GAAMC,CAAAA,MAAM,CAAGP,MAAM,CAAC,IAAD,CAArB,CACA,GAAMQ,CAAAA,QAAQ,CAAGR,MAAM,CAAC,IAAD,CAAvB,CACA,cAA0CE,QAAQ,CAAC,EAAD,CAAlD,wCAAOO,aAAP,eAAsBC,gBAAtB,eAEAT,SAAS,CAAC,UAAM,CACd,GAAIU,CAAAA,WAAW,CAAGJ,MAAM,CAACK,OAAP,CAAeC,WAAjC,CACA,GAAIC,CAAAA,YAAY,CAAGN,QAAQ,CAACI,OAAT,CAAiBC,WAApC,CACA,GAAIE,CAAAA,aAAa,CAAGP,QAAQ,CAACI,OAAT,CAAiBI,YAArC,CACA;AACA;AACAN,gBAAgB,CAAC,CACfO,aAAa,CAAEN,WAAW,EAAIP,IAAI,CAACc,MAAL,CAAc,CAAlB,CADX,CAEfC,iBAAiB,CAAEL,YAFJ,CAGfM,kBAAkB,CAAEL,aAHL,CAAD,CAAhB,CAKD,CAXQ,CAWN,CAACN,aAAD,CAXM,CAAT,CAYA,mBACE,aAAK,SAAS,CAAEb,WAAW,CAACyB,aAA5B,CAA2C,GAAG,CAAEd,MAAhD,WACGe,MAAM,CAACC,IAAP,CAAYd,aAAZ,EAA2BS,MAA3B,GAAsC,CAAtC,eACC,wCAEE,KAAC,aAAD,EACE,IAAI,CAAET,aADR,CAEE,WAAW,CAAEJ,cAFf,CAGE,KAAK,CAAER,gBAAgB,CAAC2B,OAH1B,EAFF,cAQE,KAAC,aAAD,EACE,IAAI,CAAEf,aADR,CAEE,WAAW,CAAEH,gBAFf,CAGE,KAAK,CAAET,gBAAgB,CAAC4B,SAH1B,EARF,GAFJ,CAkBGrB,IAAI,CAACsB,GAAL,CAAS,SAACC,GAAD,qBACR,aAAK,SAAS,CAAE/B,WAAW,CAACgC,OAA5B,wBACE,UAAG,SAAS,CAAEhC,WAAW,CAACiC,OAA1B,UAAoCF,GAAG,CAACG,GAAxC,EADF,cAEE,UAAG,SAAS,CAAElC,WAAW,CAACmC,SAA1B,UAAsCJ,GAAG,CAACK,IAA1C,EAFF,cAGE,YAAK,GAAG,CAAEL,GAAG,CAACM,OAAd,CAAuB,SAAS,CAAErC,WAAW,CAACsC,MAA9C,CAAsD,GAAG,CAAC,SAA1D,EAHF,cAIE,YAAK,SAAS,CAAEtC,WAAW,CAACuC,UAA5B,CAAwC,GAAG,CAAE3B,QAA7C,EAJF,cAKE,YAAK,SAAS,CAAEZ,WAAW,CAACuC,UAA5B,EALF,cAME,YACE,GAAG,CAAER,GAAG,CAACS,YADX,CAEE,SAAS,CAAExC,WAAW,CAACsC,MAFzB,CAGE,GAAG,CAAC,cAHN,EANF,cAWE,UAAG,SAAS,CAAEtC,WAAW,CAACiC,OAA1B,UAAoCF,GAAG,CAACU,IAAxC,EAXF,GAA0CV,GAAG,CAACG,GAA9C,CADQ,EAAT,CAlBH,GADF,CAoCD,CAED,cAAe3B,CAAAA,QAAf","sourcesContent":["import forecastCSS from \"./forecast.module.css\";\nimport forecastGraphCSS from \"../Graph/forecastGraph.module.css\";\nimport ForecastGraph from \"../Graph/ForecastGraph\";\nimport React, { useRef, useEffect, useState } from \"react\";\n\nfunction Forecast({ data, temperatureDay, temperatureNight }) {\n  const divRef = useRef(null);\n  const childRef = useRef(null);\n  const [containerData, setcontainerData] = useState({});\n\n  useEffect(() => {\n    let widthMiddle = divRef.current.offsetWidth;\n    let WidthOfChild = childRef.current.offsetWidth;\n    let heightOfChild = childRef.current.offsetHeight;\n    //width of the parent container divided by the number of elements and divided by 2 to find the middle\n    // width of child container to be able to draw a line to  exact pixels\n    setcontainerData({\n      startingPoint: widthMiddle / (data.length * 2),\n      widthOfContainers: WidthOfChild,\n      heightOfContainers: heightOfChild,\n    });\n  }, [containerData]);\n  return (\n    <div className={forecastCSS.mainContainer} ref={divRef}>\n      {Object.keys(containerData).length !== 0 && (\n        <>\n          {/* for dayTime */}\n          <ForecastGraph\n            data={containerData}\n            temperature={temperatureDay}\n            style={forecastGraphCSS.dayTime}\n          />\n          {/* for nightTime */}\n          <ForecastGraph\n            data={containerData}\n            temperature={temperatureNight}\n            style={forecastGraphCSS.nightTime}\n          />\n        </>\n      )}\n\n      {data.map((bud) => (\n        <div className={forecastCSS.eachDay} key={bud.day}>\n          <p className={forecastCSS.bigFont}>{bud.day}</p>\n          <p className={forecastCSS.smallFont}>{bud.date}</p>\n          <img src={bud.weather} className={forecastCSS.images} alt=\"weather\" />\n          <div className={forecastCSS.graphSpace} ref={childRef}></div>\n          <div className={forecastCSS.graphSpace}></div>\n          <img\n            src={bud.weatherNight}\n            className={forecastCSS.images}\n            alt=\"weatherNight\"\n          />\n          <p className={forecastCSS.bigFont}>{bud.wind}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}