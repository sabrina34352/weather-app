{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/components/ForecastGraph.js\";\nimport React, { useRef } from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst temperatureData = [{\n  x1: \"10\",\n  y1: \"10\",\n  x2: \"70\",\n  y2: \"70\"\n}, {\n  x1: \"70\",\n  y1: \"70\",\n  x2: \"200\",\n  y2: \"15\"\n}];\n\nfunction ForecastGraph() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: forecastCSS.graph,\n      children: temperatureData.map((each, key) => /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"line\", {\n          x1: each.x1,\n          y1: each.y1,\n          x2: each.x2,\n          y2: each.y2,\n          stroke: \"white\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: each.x2,\n          cy: each.y2,\n          r: \"5px\",\n          stroke: \"white\",\n          \"stroke-width\": \"1\",\n          fill: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ForecastGraph;\nexport default ForecastGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastGraph\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/ForecastGraph.js"],"names":["React","useRef","forecastCSS","temperatureData","x1","y1","x2","y2","ForecastGraph","graph","map","each","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AAEA,MAAMC,eAAe,GAAG,CACtB;AAAEC,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,EAAE,EAAE,IAAhB;AAAsBC,EAAAA,EAAE,EAAE,IAA1B;AAAgCC,EAAAA,EAAE,EAAE;AAApC,CADsB,EAEtB;AAAEH,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,EAAE,EAAE,IAAhB;AAAsBC,EAAAA,EAAE,EAAE,KAA1B;AAAiCC,EAAAA,EAAE,EAAE;AAArC,CAFsB,CAAxB;;AAIA,SAASC,aAAT,GAAyB;AACvB,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEN,WAAW,CAACO,KAA5B;AAAA,gBACGN,eAAe,CAACO,GAAhB,CAAoB,CAACC,IAAD,EAAOC,GAAP,kBACnB;AAAA,gCACE;AACE,UAAA,EAAE,EAAED,IAAI,CAACP,EADX;AAEE,UAAA,EAAE,EAAEO,IAAI,CAACN,EAFX;AAGE,UAAA,EAAE,EAAEM,IAAI,CAACL,EAHX;AAIE,UAAA,EAAE,EAAEK,IAAI,CAACJ,EAJX;AAKE,UAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAEE,UAAA,EAAE,EAAEI,IAAI,CAACL,EAFX;AAGE,UAAA,EAAE,EAAEK,IAAI,CAACJ,EAHX;AAIE,UAAA,CAAC,EAAC,KAJJ;AAKE,UAAA,MAAM,EAAC,OALT;AAME,0BAAa,GANf;AAOE,UAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA0BD;;KA3BQC,a;AA6BT,eAAeA,aAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\n\nconst temperatureData = [\n  { x1: \"10\", y1: \"10\", x2: \"70\", y2: \"70\" },\n  { x1: \"70\", y1: \"70\", x2: \"200\", y2: \"15\" },\n];\nfunction ForecastGraph() {\n  return (\n    <>\n      <svg className={forecastCSS.graph}>\n        {temperatureData.map((each, key) => (\n          <g>\n            <line\n              x1={each.x1}\n              y1={each.y1}\n              x2={each.x2}\n              y2={each.y2}\n              stroke=\"white\"\n            />\n            <circle\n            \n              cx={each.x2}\n              cy={each.y2}\n              r=\"5px\"\n              stroke=\"white\"\n              stroke-width=\"1\"\n              fill=\"black\"\n            />\n          </g>\n        ))}\n      </svg>\n    </>\n  );\n}\n\nexport default ForecastGraph;\n"]},"metadata":{},"sourceType":"module"}