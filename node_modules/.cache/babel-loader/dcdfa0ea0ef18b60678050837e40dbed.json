{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/components/ForecastGraph.js\";\nimport React from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst x1 = [\"10\", \"70\"];\nconst y1 = [\"10\", \"70\"];\nconst x2 = [\"70\", \"200\"];\nconst y2 = [\"70\", \"15\"];\nconst temperatureData = [{\n  x: 0,\n  y: 0\n}, {\n  x: 1,\n  y: 1\n}, {\n  x: 2,\n  y: 2\n}];\n\nfunction ForecastGraph() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: forecastCSS.graph,\n      children: x1.map((each, key) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: each,\n        y1: y1[key],\n        x2: x2[key],\n        y2: y2[key],\n        stroke: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ForecastGraph;\nexport default ForecastGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastGraph\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/ForecastGraph.js"],"names":["React","forecastCSS","x1","y1","x2","y2","temperatureData","x","y","ForecastGraph","graph","map","each","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,KAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAAD,EAAiB;AAAED,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAAjB,EAAiC;AAAED,EAAAA,CAAC,EAAE,CAAL;AAAQC,EAAAA,CAAC,EAAE;AAAX,CAAjC,CAAxB;;AACA,SAASC,aAAT,GAAyB;AACvB,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAER,WAAW,CAACS,KAA5B;AAAA,gBACGR,EAAE,CAACS,GAAH,CAAO,CAACC,IAAD,EAAOC,GAAP,kBACN;AAAM,QAAA,EAAE,EAAED,IAAV;AAAgB,QAAA,EAAE,EAAET,EAAE,CAACU,GAAD,CAAtB;AAA6B,QAAA,EAAE,EAAET,EAAE,CAACS,GAAD,CAAnC;AAA0C,QAAA,EAAE,EAAER,EAAE,CAACQ,GAAD,CAAhD;AAAuD,QAAA,MAAM,EAAC;AAA9D;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;KAVQJ,a;AAYT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nconst x1 = [\"10\", \"70\"];\nconst y1 = [\"10\", \"70\"];\nconst x2 = [\"70\", \"200\"];\nconst y2 = [\"70\", \"15\"];\n\nconst temperatureData = [{ x: 0, y: 0 }, { x: 1, y: 1 }, { x: 2, y: 2 }];\nfunction ForecastGraph() {\n  return (\n    <>\n      <svg className={forecastCSS.graph}>\n        {x1.map((each, key) => (\n          <line x1={each} y1={y1[key]} x2={x2[key]} y2={y2[key]} stroke=\"white\" />\n        ))}\n      </svg>\n    </>\n  );\n}\n\nexport default ForecastGraph;\n"]},"metadata":{},"sourceType":"module"}