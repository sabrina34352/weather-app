{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/components/ForecastGraph.js\";\nimport React from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst x1 = [\"10\", \"70\"];\nconst y1 = [\"10\", \"70\"];\nconst x2 = [\"70\", \"200\"];\nconst y2 = [\"70\", \"15\"];\nconst temperatureData = [{\n  x1: \"10\",\n  y1: \"10\",\n  x2: \"70\",\n  y2: \"70\"\n}, {\n  x1: \"70\",\n  y1: \"70\",\n  x2: \"200\",\n  y2: \"15\"\n}];\n\nfunction ForecastGraph() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      className: forecastCSS.graph,\n      children: temperatureData.map((each, key) => /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: each.x1,\n        y1: each.y1[key],\n        x2: each.x1[key],\n        y2: each.y1[key],\n        stroke: \"white\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = ForecastGraph;\nexport default ForecastGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastGraph\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/ForecastGraph.js"],"names":["React","forecastCSS","x1","y1","x2","y2","temperatureData","ForecastGraph","graph","map","each","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,KAAP,CAAX;AACA,MAAMC,EAAE,GAAG,CAAC,IAAD,EAAO,IAAP,CAAX;AAEA,MAAMC,eAAe,GAAG,CACtB;AAAEJ,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,EAAE,EAAE,IAAhB;AAAsBC,EAAAA,EAAE,EAAE,IAA1B;AAAgCC,EAAAA,EAAE,EAAE;AAApC,CADsB,EAEtB;AAAEH,EAAAA,EAAE,EAAE,IAAN;AAAYC,EAAAA,EAAE,EAAE,IAAhB;AAAsBC,EAAAA,EAAE,EAAE,KAA1B;AAAiCC,EAAAA,EAAE,EAAE;AAArC,CAFsB,CAAxB;;AAIA,SAASE,aAAT,GAAyB;AACvB,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEN,WAAW,CAACO,KAA5B;AAAA,gBACGF,eAAe,CAACG,GAAhB,CAAoB,CAACC,IAAD,EAAOC,GAAP,kBACnB;AACE,QAAA,EAAE,EAAED,IAAI,CAACR,EADX;AAEE,QAAA,EAAE,EAAEQ,IAAI,CAACP,EAAL,CAAQQ,GAAR,CAFN;AAGE,QAAA,EAAE,EAAED,IAAI,CAACR,EAAL,CAAQS,GAAR,CAHN;AAIE,QAAA,EAAE,EAAED,IAAI,CAACP,EAAL,CAAQQ,GAAR,CAJN;AAKE,QAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAeD;;KAhBQJ,a;AAkBT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport forecastCSS from \"../styles/forecast.module.css\";\nconst x1 = [\"10\", \"70\"];\nconst y1 = [\"10\", \"70\"];\nconst x2 = [\"70\", \"200\"];\nconst y2 = [\"70\", \"15\"];\n\nconst temperatureData = [\n  { x1: \"10\", y1: \"10\", x2: \"70\", y2: \"70\" },\n  { x1: \"70\", y1: \"70\", x2: \"200\", y2: \"15\" },\n];\nfunction ForecastGraph() {\n  return (\n    <>\n      <svg className={forecastCSS.graph}>\n        {temperatureData.map((each, key) => (\n          <line\n            x1={each.x1}\n            y1={each.y1[key]}\n            x2={each.x1[key]}\n            y2={each.y1[key]}\n            stroke=\"white\"\n          />\n        ))}\n      </svg>\n    </>\n  );\n}\n\nexport default ForecastGraph;\n"]},"metadata":{},"sourceType":"module"}