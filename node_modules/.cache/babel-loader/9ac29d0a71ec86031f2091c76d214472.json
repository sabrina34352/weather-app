{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/App.js\";\nimport Forecast from \"./components/Forecast\";\nimport { days } from \"./assets/days\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  const temperatureNight = [];\n  const temperatureDay = [];\n  {\n    temperature.map((each, key) => {\n      temperatureData.x1 = temperatureData.x2;\n      temperatureData.y1 = temperatureData.y2;\n      temperatureData.x2 += data.widthOfContainers;\n\n      if (temperature[key - 1] > each) {\n        temperatureData.y2 += degreeOfChange * Math.abs(temperature[key - 1] - each);\n      } else if (temperature[key - 1] < each) {\n        temperatureData.y2 -= degreeOfChange * Math.abs(temperature[key - 1] - each);\n      } else {\n        temperatureData.y2 += 0;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: temperatureData.x2,\n          cy: temperatureData.y2,\n          r: \"4px\",\n          stroke: \"white\",\n          strokeWidth: \"1\",\n          fill: \"black\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this), style === forecastGraphCSS.dayTime && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"text\", {\n            fontSize: \"16\",\n            fill: \"white\",\n            textAnchor: \"middle\",\n            alignmentBaseline: \"baseline\",\n            x: temperatureData.x2,\n            y: temperatureData.y2 - 15,\n            children: [temperature[key], \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: temperatureData.x1,\n            y1: temperatureData.y1,\n            x2: temperatureData.x2,\n            y2: temperatureData.y2,\n            stroke: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), style === forecastGraphCSS.nightTime && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"line\", {\n            x1: temperatureData.x1,\n            y1: temperatureData.y1,\n            x2: temperatureData.x2,\n            y2: temperatureData.y2,\n            stroke: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            fontSize: \"16\",\n            fill: \"white\",\n            textAnchor: \"middle\",\n            alignmentBaseline: \"baseline\",\n            x: temperatureData.x2,\n            y: temperatureData.y2 + 20,\n            children: [temperature[key], \"\\xB0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header\",\n        children: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043D\\u0430 5 \\u0434\\u043D\\u0435\\u0439\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n      data: days\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/App.js"],"names":["Forecast","days","App","temperatureNight","temperatureDay","temperature","map","each","key","temperatureData","x1","x2","y1","y2","data","widthOfContainers","degreeOfChange","Math","abs","style","forecastGraphCSS","dayTime","nightTime"],"mappings":"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","sourcesContent":["import Forecast from \"./components/Forecast\";\nimport { days } from \"./assets/days\";\nimport \"./App.css\";\n\nfunction App() {\n  const temperatureNight=[];\n  const temperatureDay=[];\n    {temperature.map((each, key) => {\n          temperatureData.x1 = temperatureData.x2;\n          temperatureData.y1 = temperatureData.y2;\n          temperatureData.x2 += data.widthOfContainers;\n\n          if (temperature[key - 1] > each) {\n            temperatureData.y2 +=\n              degreeOfChange * Math.abs(temperature[key - 1] - each);\n          } else if (temperature[key - 1] < each) {\n            temperatureData.y2 -=\n              degreeOfChange * Math.abs(temperature[key - 1] - each);\n          } else {\n            temperatureData.y2 += 0;\n          }\n\n          return (\n            <g key={key}>\n              <circle\n                cx={temperatureData.x2}\n                cy={temperatureData.y2}\n                r=\"4px\"\n                stroke=\"white\"\n                strokeWidth=\"1\"\n                fill=\"black\"\n              />\n\n              {/* display the data according to dayTime standards */}\n              {style === forecastGraphCSS.dayTime && (\n                <>\n                  <text\n                    fontSize=\"16\"\n                    fill=\"white\"\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"baseline\"\n                    x={temperatureData.x2}\n                    y={temperatureData.y2 - 15}\n                  >\n                    {temperature[key]}°\n                  </text>\n                  <line\n                    x1={temperatureData.x1}\n                    y1={temperatureData.y1}\n                    x2={temperatureData.x2}\n                    y2={temperatureData.y2}\n                    stroke=\"white\"\n                  />\n                </>\n              )}\n              {/* display the data according to nightTime standards */}\n              {style === forecastGraphCSS.nightTime && (\n                <>\n                  <line\n                    x1={temperatureData.x1}\n                    y1={temperatureData.y1}\n                    x2={temperatureData.x2}\n                    y2={temperatureData.y2}\n                    stroke=\"white\"\n                  />\n                  <text\n                    fontSize=\"16\"\n                    fill=\"white\"\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"baseline\"\n                    x={temperatureData.x2}\n                    y={temperatureData.y2 + 20}\n                  >\n                    {temperature[key]}°\n                  </text>\n                </>\n              )}\n            </g>\n          );\n        })}\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"header\">Прогноз на 5 дней</h1>\n      </header>\n      <Forecast data={days} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}