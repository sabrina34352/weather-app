{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/components/Graph/ForecastGraph.js\";\nimport React from \"react\";\nimport forecastGraphCSS from \"./forecastGraph.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ForecastGraph(_ref) {\n  let {\n    data,\n    temperature,\n    style\n  } = _ref;\n  // finding the maximum and minimum values in the array\n  let max = Math.max(...temperature),\n      min = Math.min(...temperature); // finding the difference to be able to calculate by how much the height of the line should be curved\n\n  let difference = max - min; // the max height to not go out of boundaries\n\n  let maxHeight = data.heightOfContainers;\n  let degreeOfChange = maxHeight / difference; // degree of change of Y axis\n  // the initial values of the graph\n\n  const temperatureData = {\n    x1: 0,\n    y1: 0,\n    x2: -data.startingPoint,\n    y2: 50\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: forecastGraphCSS.graph,\n    id: style\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n}\n\n_c = ForecastGraph;\nexport default ForecastGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastGraph\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/Graph/ForecastGraph.js"],"names":["React","forecastGraphCSS","ForecastGraph","data","temperature","style","max","Math","min","difference","maxHeight","heightOfContainers","degreeOfChange","temperatureData","x1","y1","x2","startingPoint","y2","graph"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,4BAA7B;;;AAEA,SAASC,aAAT,OAAqD;AAAA,MAA9B;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA;AAArB,GAA8B;AACnD;AAEA,MAAIC,GAAG,GAAGC,IAAI,CAACD,GAAL,CAAS,GAAGF,WAAZ,CAAV;AAAA,MACEI,GAAG,GAAGD,IAAI,CAACC,GAAL,CAAS,GAAGJ,WAAZ,CADR,CAHmD,CAKnD;;AACA,MAAIK,UAAU,GAAGH,GAAG,GAAGE,GAAvB,CANmD,CAOnD;;AACA,MAAIE,SAAS,GAAGP,IAAI,CAACQ,kBAArB;AACA,MAAIC,cAAc,GAAGF,SAAS,GAAGD,UAAjC,CATmD,CASN;AAE7C;;AACA,QAAMI,eAAe,GAAG;AACtBC,IAAAA,EAAE,EAAE,CADkB;AAEtBC,IAAAA,EAAE,EAAE,CAFkB;AAGtBC,IAAAA,EAAE,EAAE,CAACb,IAAI,CAACc,aAHY;AAItBC,IAAAA,EAAE,EAAE;AAJkB,GAAxB;AAOA,sBAAO;AAAK,IAAA,SAAS,EAAEjB,gBAAgB,CAACkB,KAAjC;AAAwC,IAAA,EAAE,EAAEd;AAA5C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KApBQH,a;AAsBT,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport forecastGraphCSS from \"./forecastGraph.module.css\";\n\nfunction ForecastGraph({ data, temperature, style }) {\n  // finding the maximum and minimum values in the array\n\n  let max = Math.max(...temperature),\n    min = Math.min(...temperature);\n  // finding the difference to be able to calculate by how much the height of the line should be curved\n  let difference = max - min;\n  // the max height to not go out of boundaries\n  let maxHeight = data.heightOfContainers;\n  let degreeOfChange = maxHeight / difference; // degree of change of Y axis\n\n  // the initial values of the graph\n  const temperatureData = {\n    x1: 0,\n    y1: 0,\n    x2: -data.startingPoint,\n    y2: 50,\n  };\n\n  return <svg className={forecastGraphCSS.graph} id={style}></svg>;\n}\n\nexport default ForecastGraph;\n"]},"metadata":{},"sourceType":"module"}