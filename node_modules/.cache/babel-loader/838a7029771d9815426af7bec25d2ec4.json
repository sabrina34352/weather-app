{"ast":null,"code":"var _jsxFileName = \"/home/sabrina/codes/weather-app/src/components/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport forecastCSS from \"../styles/forecast.module.css\";\nimport forecastGraphCSS from \"../styles/forecastGraph.module.css\";\nimport cloudwithrain from \"../assets/cloudwithrain.svg\";\nimport cloudwithrainandstorm from \"../assets/cloudwithstorm.svg\";\nimport moon from \"../assets/moonReal.svg\";\nimport moonandcloud from \"../assets/moonAndClouds.svg\";\nimport ForecastGraph from \"../components/ForecastGraph\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst days = [{\n  day: \"Вчера\",\n  date: \"06.06\",\n  weather: cloudwithrain,\n  weatherNight: moonandcloud,\n  wind: \"3.1 m/c\"\n}, {\n  day: \"Сегодня\",\n  date: \"07.06\",\n  weather: cloudwithrain,\n  weatherNight: moon,\n  wind: \"2.9 m/c\"\n}, {\n  day: \"Завтра\",\n  date: \"08.06\",\n  weather: cloudwithrainandstorm,\n  weatherNight: moonandcloud,\n  wind: \"3.6 m/c\"\n}, {\n  day: \"Ср\",\n  date: \"09.06\",\n  weather: cloudwithrain,\n  weatherNight: moon,\n  wind: \"3.1 m/c\"\n}, {\n  day: \"Чт\",\n  date: \"10.06\",\n  weather: cloudwithrain,\n  weatherNight: moon,\n  wind: \"3.6 m/c\"\n}];\n\nfunction Forecast() {\n  _s();\n\n  const divRef = useRef(null);\n  const childRef = useRef(null);\n  const [dataExists, setDataExists] = useState({});\n  const temperatureNight = [13, 14, 14, 13, 13, 14];\n  const temperatureDay = [23, 23, 24, 24, 22, 24];\n  useEffect(() => {\n    let widthMiddle = divRef.current.offsetWidth;\n    let WidthOfChild = childRef.current.offsetWidth;\n    let heightOfChild = childRef.current.offsetHeight; //width of the parent container divided by the number of elements and divided by 2 to find the middle\n    // width of child container to be able to draw a line to  exact pixels\n\n    setDataExists({\n      startingPoint: widthMiddle / 10,\n      widthOfContainers: WidthOfChild,\n      heightOfContainers: heightOfChild\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: forecastCSS.mainContainer,\n    ref: divRef,\n    children: [Object.keys(dataExists).length !== 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ForecastGraph, {\n        data: dataExists,\n        temperature: temperatureDay,\n        style: forecastGraphCSS.dayTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ForecastGraph, {\n        data: dataExists,\n        temperature: temperatureNight,\n        style: forecastGraphCSS.nightTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), days.map(bud => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: forecastCSS.eachDay,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: forecastCSS.bigFont,\n        children: bud.day\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: forecastCSS.smallFont,\n        children: bud.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bud.weather,\n        className: forecastCSS.images,\n        alt: \"weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: forecastCSS.random,\n        ref: childRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: forecastCSS.random\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: bud.weatherNight,\n        className: forecastCSS.images,\n        alt: \"weatherNight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: forecastCSS.bigFont,\n        children: bud.wind\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this)]\n    }, bud.day, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Forecast, \"oW/W9LMZFnAEoZ0i84R8glbVl+w=\");\n\n_c = Forecast;\nexport default Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/home/sabrina/codes/weather-app/src/components/Forecast.js"],"names":["forecastCSS","forecastGraphCSS","cloudwithrain","cloudwithrainandstorm","moon","moonandcloud","ForecastGraph","React","useRef","useEffect","useState","days","day","date","weather","weatherNight","wind","Forecast","divRef","childRef","dataExists","setDataExists","temperatureNight","temperatureDay","widthMiddle","current","offsetWidth","WidthOfChild","heightOfChild","offsetHeight","startingPoint","widthOfContainers","heightOfContainers","mainContainer","Object","keys","length","dayTime","nightTime","map","bud","eachDay","bigFont","smallFont","images","random"],"mappings":"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","sourcesContent":["import forecastCSS from \"../styles/forecast.module.css\";\nimport forecastGraphCSS from \"../styles/forecastGraph.module.css\";\nimport cloudwithrain from \"../assets/cloudwithrain.svg\";\nimport cloudwithrainandstorm from \"../assets/cloudwithstorm.svg\";\nimport moon from \"../assets/moonReal.svg\";\nimport moonandcloud from \"../assets/moonAndClouds.svg\";\nimport ForecastGraph from \"../components/ForecastGraph\";\nimport React, { useRef, useEffect, useState } from \"react\";\n\nconst days = [\n  {\n    day: \"Вчера\",\n    date: \"06.06\",\n    weather: cloudwithrain,\n    weatherNight: moonandcloud,\n    wind: \"3.1 m/c\",\n  },\n  {\n    day: \"Сегодня\",\n    date: \"07.06\",\n    weather: cloudwithrain,\n    weatherNight: moon,\n    wind: \"2.9 m/c\",\n  },\n  {\n    day: \"Завтра\",\n    date: \"08.06\",\n    weather: cloudwithrainandstorm,\n    weatherNight: moonandcloud,\n    wind: \"3.6 m/c\",\n  },\n  {\n    day: \"Ср\",\n    date: \"09.06\",\n    weather: cloudwithrain,\n    weatherNight: moon,\n    wind: \"3.1 m/c\",\n  },\n  {\n    day: \"Чт\",\n    date: \"10.06\",\n    weather: cloudwithrain,\n    weatherNight: moon,\n    wind: \"3.6 m/c\",\n  },\n];\n\nfunction Forecast() {\n  const divRef = useRef(null);\n  const childRef = useRef(null);\n  const [dataExists, setDataExists] = useState({});\n\n  const temperatureNight = [13, 14, 14, 13, 13, 14];\n  const temperatureDay = [23, 23, 24, 24, 22, 24];\n\n  useEffect(() => {\n    let widthMiddle = divRef.current.offsetWidth;\n    let WidthOfChild = childRef.current.offsetWidth;\n    let heightOfChild = childRef.current.offsetHeight;\n    //width of the parent container divided by the number of elements and divided by 2 to find the middle\n    // width of child container to be able to draw a line to  exact pixels\n    setDataExists({\n      startingPoint: widthMiddle / 10,\n      widthOfContainers: WidthOfChild,\n      heightOfContainers: heightOfChild,\n    });\n  }, []);\n  return (\n      <div className={forecastCSS.mainContainer} ref={divRef}>\n        {Object.keys(dataExists).length !== 0 && (\n          <>\n            {/* for dayTime */}\n            <ForecastGraph\n              data={dataExists}\n              temperature={temperatureDay}\n              style={forecastGraphCSS.dayTime}\n            />\n            {/* for nightTime */}\n            <ForecastGraph\n              data={dataExists}\n              temperature={temperatureNight}\n              style={forecastGraphCSS.nightTime}\n            />\n          </>\n        )}\n\n        {days.map((bud) => (\n          <div className={forecastCSS.eachDay} key={bud.day}>\n            <p className={forecastCSS.bigFont}>{bud.day}</p>\n            <p className={forecastCSS.smallFont}>{bud.date}</p>\n            <img\n              src={bud.weather}\n              className={forecastCSS.images}\n              alt=\"weather\"\n            />\n            <div className={forecastCSS.random} ref={childRef}></div>\n            <div className={forecastCSS.random}></div>\n            <img\n              src={bud.weatherNight}\n              className={forecastCSS.images}\n              alt=\"weatherNight\"\n            />\n            <p className={forecastCSS.bigFont}>{bud.wind}</p>\n          </div>\n        ))}\n      </div>\n  );\n}\n\nexport default Forecast;\n"]},"metadata":{},"sourceType":"module"}